(defclass installer ()
  ((prefix
     :initarg :prefix
     :initform nil
     :accessor installer-prefix)))

(defgeneric installer-path-part (instance part)
  (:documentation "Get a specific part of an installer path. part is a keyword symbol specifying which part."))

(defmethod installer-path-part (instance (part (eql :prefix)))
  "Get the directory prefix if it exists."
  (with-slots (prefix) instance
    (if prefix
      (merge-pathnames
        (uiop:relativize-pathname-directory (installer-path-part instance :root))
        (truename prefix))
      (installer-path-part instance :root))))

(defmethod installer-path-part (instance (type (eql :root)))
  "Get the root directory for a user installation"
  (cond
    ; use $HOME/Library/ on Mac
    ((uiop:os-macosx-p)
      (merge-pathnames (make-pathname :directory '(:relative "Library"))
                       (uiop:getenv-pathname "HOME" :ensure-directory t)))
    ; Use %APPDATA% on Windows
    ((uiop:os-windows-p)
      (uiop:get-folder-path :appdata))
    ; Use XDG_DATA_HOME on all other platforms
    (t
      (uiop:xdg-data-home))))

